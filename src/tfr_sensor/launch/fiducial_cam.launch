<launch>
    <node name="front_cam_tf_broadcaster" pkg="tf2_ros" type="static_transform_publisher"
        args="0.48 0.076 0.139 0 0 0 1 base_link front_cam_link"/>
    <node name="front_cam" pkg="cv_camera" type="cv_camera_node" output="screen">
        <rosparam>
            file: "v4l2src device=/dev/video2 ! video/x-raw(memory:NVMM), width=1280, height=720,format=I420, framerate=30/1 ! nvvideoconv flip-method=0 ! video/x-raw, format=BGRx ! videoconvert ! video/x-raw, format=BGR ! appsink sync=false drop=true max-buffers=10"
            frame_id: front_cam_link
            rate: 30
        </rosparam>
        <param name="camera_info_url" value="file://$(find tfr_sensor)/calib/front_4056x3040.yaml"/>
    </node>
    <node name="front_cam_wrapper" pkg="tfr_sensor" type="image_topic_wrapper">
        <rosparam>
            camera_topic: /sensors/front_cam/image_raw
            service_name: /on_demand/front_cam/image_raw
        </rosparam>
    </node>
    <node name="rear_cam_tf_broadcaster" pkg="tf2_ros" type="static_transform_publisher"
        args="-0.48 -0.076 0.267 0 0 1 0 base_link rear_cam_link"/>
    <node name="rear_cam" pkg="cv_camera" type="cv_camera_node" output="screen">
        <rosparam>
            file: "v4l2src device=/dev/video0 ! video/x-raw(memory:NVMM), width=1280, height=720,format=I420, framerate=30/1 ! nvvideoconv flip-method=0 ! video/x-raw, format=BGRx ! videoconvert ! video/x-raw, format=BGR ! appsink sync=false drop=true max-buffers=10"
            rate: 30
            frame_id: rear_cam_link
        </rosparam>
        <param name="camera_info_url" value="file://$(find tfr_sensor)/calib/rear_4056x3040.yaml"/>
    </node>
    <node name="rear_cam_wrapper" pkg="tfr_sensor" type="image_topic_wrapper">
        <rosparam>
            camera_topic: /sensors/rear_cam/image_raw
            service_name: /on_demand/rear_cam/image_raw
        </rosparam>
    </node>
</launch>
